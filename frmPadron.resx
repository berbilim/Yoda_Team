<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btninicio.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAOw4AADsOAFxK8o4AAAEF0lE
        QVRoQ+2YuY8cRRSHh0McErCzq8UzK8EeEoETG6xFWDiDwEiG2IFBAgmwgD8BbAmICTnEmRJiGxtiEsSZ
        kZjAEimHhBCHxGH4vupXntrentmZ3ZkhcP+kTz1T9eq9V91d1VXVadWq1VZ1V9Y73WXorx+BV+ANeL3A
        /5bfv9hfxW4jWg5EnSzDs4G/o3bGMlAE/BL+HcFXsCWxbn+ts9Bbu4ayA3AO/gnOwsGFlQ3rwnpGMgCs
        wnfQlHjGDtwOZbsb4XG4BHV7y56AmyC1mYl0DmUHfoIX4BnIr4Qc3ufrVtnLOrwJv0FO+ucg/7fuLdA2
        tZu6wnHZAa/+D4uBLIPr4AH4AnKil8FX8FjwNeQ60fZBsG14m5J0CDt2wP+wAC/Cj5CT+wMc6KlN4G8n
        gN8h29nmFOgjvE5BOoOhHfDa7bztdRPOw5+Qk7oIvuc3Q7JX/o4y67TJ9n+BPjZvXd5MdnuWTqCxA4GD
        0ETKgfo3fAz3dHtr2DRPrYuUcz0EH4Ftcnt9PQZ7H+A6gHIa9ZqmS7gD3oFyoOZXYRHCy3BpE7ZODD9A
        9vMrvAt3QrLblRZo2O/fpYPD8BzcB9eCg/EzcIAa0OuncLTbm2wwagu2OQr6KH0a4xgfVGNGi11KB9CF
        56G8Wz6B92DXd4tOZ//68M6XT9VYPqGxnuo2dXu8qyu+y7zT/fUL4GDLzqf3viJ9hK/6uDKmY+XuKpft
        46pRNMgOn4JvoXR4Bg4tVTbRYu/SV1qDVTfsAyhvmLPW07BlZtsmKwNnnFdh9nN2TfqOGC9B+W0xl9eg
        +ZVNhb0NB81D4BonDyrJX83rIVrMTsaAUV93cky5bmlwC3iHv4fcwEFlr2e3bhmiKl4ag2vgF7w+wE/D
        bXClA8eh/KLmlaOry3A7fxk7cmga4CfgitHD8AvMd+0+htKTqPYYByHvMbZ14AZ4BJwel2OOdkf2stdh
        O69ZqbYrTDmA/10RmOOj0DyhWAiNS4l5yVgRc/IcNIKhq9F5yFgRc/IcNArjtgO7lbEiZtuBkY0tA2cD
        l93l2dE42Kb6GNVkGcytAyZS7q7GZTCX12QZzK0DLjfKxCbB45nwNpBlMLcO+DrkhN6Hk1CeH5V4tvQJ
        ZHvLwttAlsH/0oHGhLKsgx3tLYO2A20H6rIO2g6MlEZh3HagLutgLh1w95+3cO5B74VUVyrKptqBpX1V
        HDBmPkwzl3QisaM0As9gPoQc6HMwcB2/wt/A0IRKWQe2y/Z+1DzCqfsVjxiznbmMPhfKWkrbxxTIs9Dy
        bGYcxunApEsPn4K50HY1PO2gyjidzdRPA0YxdHGWZR1MsvgztvvfyQ96bcDm3tOA/fAkeHeHYVImP/Lk
        zrqw0dY2Tb4yxtyfcuhNmHyrVleNOp3/APHg9J+iUFMwAAAAAElFTkSuQmCC
</value>
  </data>
</root>